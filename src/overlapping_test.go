package overlapping

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestIsOverlapConst(t *testing.T) {
	assert.False(t, IsOverlap("ABA"))
}

func TestIsOverlapConst1(t *testing.T) {
	assert.True(t, IsOverlap("ABCDEABDPKMABBAB"))
}

func TestIsOverlapConst2(t *testing.T) {
	assert.False(t, IsOverlap("ABCDEABDPKMABBCDEABDPKMABBCDEABDPKMAB"))
}

func TestIsOverlapConst3(t *testing.T) {
	assert.True(t, IsOverlap("ACBCDEBDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPBAKMABCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABB"))
}

func BenchmarkIsOverlapConst1(b *testing.B) {
	for i := 0; i < b.N; i++ {
		IsOverlap("ABCDEABDPKMABBAB")
	}
}

func BenchmarkIsOverlapConst2(b *testing.B) {
	for i := 0; i < b.N; i++ {
		IsOverlap("ABCDEABDPKMABBCDEABDPKMABBCDEABDPKMAB")
	}
}

func BenchmarkIsOverlapConst3(b *testing.B) {
	for i := 0; i < b.N; i++ {
		IsOverlap("ACBCDEBDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPBAKMABCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABB")
	}
}
