package overlapping

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestIsOverlapOrigin(t *testing.T) {
	assert.False(t, IsNonOverlap("ABA"))
}

func TestIsOverlap1(t *testing.T) {
	assert.True(t, IsNonOverlap("ABCDEABDPKMABBAB"))
}

func TestIsOverlap2(t *testing.T) {
	assert.False(t, IsNonOverlap("ABCDEABDPKMABBCDEABDPKMABBCDEABDPKMAB"))
}

func TestIsOverlap3(t *testing.T) {
	assert.True(t, IsNonOverlap("ACBCDEBDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPBAKMABCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABB"))
}

func BenchmarkIsOverlap1(b *testing.B) {
	for i := 0; i < b.N; i++ {
		IsNonOverlap("ABCDEABDPKMABBAB")
	}
}

func BenchmarkIsOverlap2(b *testing.B) {
	for i := 0; i < b.N; i++ {
		IsNonOverlap("ABCDEABDPKMABBCDEABDPKMABBCDEABDPKMAB")
	}
}

func BenchmarkIsOverlap3(b *testing.B) {
	for i := 0; i < b.N; i++ {
		IsNonOverlap("ACBCDEBDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPBAKMABCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABBCDEABDPKMABB")
	}
}
